[{"path":"https://ylaboratory.github.io/seismic/articles/GWAS_processing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GWAS preprocessing for _seismic_ input","text":"seismic framework takes output MAGMA input. Basically, MAGMA software digests SNP-level summary statistics trait genome-wide association study gene-level MAGMA z-score statistics. tutorial guide preprocessing steps necessary convert raw GWAS summary statistics proper format seismic analysis. beginning, ensure installed MAGMA software obtained required files: Gene location file SNP synonyms file (dbSNP) Population-specific reference data files can downloaded MAGMA website. addition reference files, GWAS summary statistics table also required provide SNP-level information trait interest. use example files demonstrate preprocessing steps. files available download data repository . assume users wanting follow tutorial downloaded unzipped all_data folder repository beginning.","code":""},{"path":"https://ylaboratory.github.io/seismic/articles/GWAS_processing.html","id":"step-1-clean-up-the-gwas-summary-statistics-file","dir":"Articles","previous_headings":"","what":"Step 1: Clean up the GWAS summary statistics file","title":"GWAS preprocessing for _seismic_ input","text":"starting GWAS summary statistics file minimum include columns : chromsome ID, base-pair position, p-value. Additionally, strongly recommend including SNP IDs facilitate MAGMA analysis.","code":"library(magrittr) library(dplyr)  example_gwas <- read.table(\"all_data/example_data/sample_gwas.txt\", header = T) %>% as_tibble()  head(example_gwas) ## # A tibble: 6 × 7 ##   Allele1 Allele2 Direction P.value  group Chromosome     BP ##   <chr>   <chr>   <chr>       <dbl>  <int>      <int>  <int> ## 1 t       c       ---        0.0541 184129          1 796338 ## 2 a       g       +++        0.0315  46089          1 817341 ## 3 t       c       +++        0.0159 189219          1 817514 ## 4 a       t       -+-        0.199   39112          1 870176 ## 5 c       g       --+        0.730   80434          1 928622 ## 6 t       c       --+        0.913  185512          1 996120"},{"path":"https://ylaboratory.github.io/seismic/articles/GWAS_processing.html","id":"step-2-map-the-snp-location-to-grch37","dir":"Articles","previous_headings":"","what":"Step 2: Map the SNP location to GRCh37","title":"GWAS preprocessing for _seismic_ input","text":"MAGMA gene analysis, required population-specific reference data based GRCh37 genome build, SNP location converted GRCh37 (hg19). illustrate steps conversion using LiftOver provided UCSC. start hg38 data, data already hg19 can skip step. Additionally, preprocessed version already saved downloadable example files: all_data/example_data/sample_gwas_hg19.txt. First chain object hg38ToHg19..chain.gz must downloaded UCSC website unzipped.","code":"library('GenomicRanges') library('IRanges') library('rtracklayer')  chainObject <- import.chain(\"hg38ToHg19.over.chain\") # update with path to chain obj grObject <- GRanges(seqnames = paste0(\"chr\", example_gwas$Chromosome),                    ranges = IRanges(start=as.numeric(example_gwas$BP), end=as.numeric(example_gwas$BP)+1))  hg19_res <- liftOver(grObject, chainObject)  # extract the result data frame, select the necessary columns hg19_res_df <- as.data.frame(hg19_res) %>%   mutate(seqnames = gsub(seqnames, pattern = \"chr\",replacement = \"\")) %>%   select(group, start, seqnames) %>%   rename(\"start\" = \"BP\", \"seqnames\" = \"Chromosome\")  # get the 1 to 1 mapping hg19_res_df <- hg19_res_df %>% group_by(group) %>%    filter(n()==1) %>%   ungroup()   # merge with the original data frame (the group column indicates the original position in the table) example_gwas <- example_gwas %>%   mutate(group = 1:n()) %>%   select(-Chromosome, -BP) %>%   left_join(hg19_res_df , by = \"group\") %>%   filter(!is.na(BP))  write.table(example_gwas %>% mutate(BP = as.character(BP)),  #avoid numerical output              file = \"sample_gwas_hg19.txt\",              sep=\"\\t\", col.names = T, row.names = F, quote = F)  head(example_gwas)"},{"path":"https://ylaboratory.github.io/seismic/articles/GWAS_processing.html","id":"step-3-map-the-snp-location-to-snp-id","dir":"Articles","previous_headings":"","what":"Step 3: Map the SNP location to SNP ID","title":"GWAS preprocessing for _seismic_ input","text":"SNP ID included GWAS summary statistics file, can use SNP synonyms file map SNP location SNP ID. simplify procedure, included bash script seismic-analysis repository src/tools/annotate_SNP.sh. script require dbSNP file GWAS summary statistics file input, output new file SNP ID included last column. view specific parameters script, can run following command terminal: annotate locations, script requires vcf file dbSNP, available download UCSC, requires bedtools. prerequisties met can run script follows: Note script may takes hours run consumes 100 GB memory. alleviate memory usage increase running time, -n option may used sequentially split task. resulting annotation table printed path header specified -o option.","code":"bash src/tools/annotate_SNP.sh -h ##  ##     This script help you locate SNP and transform the locus (by chromosome id and location) to the corresponding variant rsid. ##     Only intersected SNPs will be printed out. ##     Note!!!! 1. All file path should be the same as the original files. 2. bedtools is required, so make sure it's in your environment or path ##     Here are the required parameters: ##     -g | GWAS summary statistics files. Or any other files that you would like to annotate SNPs to. ##     -o | Outpur file header. If the value is given as 'dir1/dir2/output', then the final output file will be 'dir1/dir2/output.annot.table.txt'. If it is not specified, the output file will be the same as the input file with the suffix ignored. ##     -c | Chromosome column, i.e. the column with with chromosome information be (in the table). The value should be specified or by default it will be 1. ##     -p | Position column, i.e. The column with the the position information (in the table), The value should be specified or by default it will be 2. ##     -b | Basis of chromosome numbering, to specify the if first position on a chromosome is labeled as '1'(1-base), or '0'(0-base). The default parameters are start with 1. #only these two are available! ##     -k | Keep all unmapped SNPs which do not exist in the dbSNP file or not. By default it is True. (You can choose between 'True' or 'False') ##      ##     optional parameters: ##     -v | VCF file for the dbsnp version you used. For default it will be located in 'data/ref/Hg19.dbsnp151.vcf'. This can be downloaded online. ##     -n | Number of tasks to split the job. The default value is 1. If the memory is not enough, you can split the job into several parts but it will take more time. ##     -t | Customized bedtools command. By default it is 'bedtools'. If you do not have it in your environment, you can specify the path to the bedtools command. ##     -w | The working directory. By default it is the current directory. If you want to specify the working directory, you can use this parameter. ##     -h | Help message. ## bash src/tools/annotate_SNP.sh -g all_data/example_data/sample_gwas_hg19.txt -o all_data/example_data/sample_gwas_hg19 \\ -c 6 -p 7 -v data/ref/Hg19.dbsnp151.vcf -t bin/bedtools > head all_data/example_data/sample_gwas_hg19.annot.table  ## Allele1  Allele2 Direction   P.value group   Chromosome  BP  marker.name ## t    c   --- 0.0541  1   1   731718 rs58276399 ## a    g   +++ 0.03149 2   1   752721 rs3131972 ## t    c   +++ 0.01587 3   1   752894 rs3131971 ## a    t   -+- 0.1987  4   1   805556 rs72631880 ## c    g   --+ 0.7303  5   1   864002 rs1806501 ## t    c   --+ 0.913   6   1   931500 rs74718486 ## a    g   --+ 0.4902  7   1   938125 rs2710868 ## a    g   --+ 0.785   8   1   941334 rs57683598 ## t    c   +++ 0.1863  9   1   948921 rs15842"},{"path":"https://ylaboratory.github.io/seismic/articles/GWAS_processing.html","id":"step-4-generate-the-input-file-for-magma","dir":"Articles","previous_headings":"","what":"Step 4: Generate the input file for MAGMA","title":"GWAS preprocessing for _seismic_ input","text":"MAGMA software takes two input files generated previously processed (unprocessed required columns) GWAS summary statistics file: SNP location file p-value file. can simply use awk command extract information correct format command line: R: results file looks like:","code":"# print rsID, chromosome, BP but not colum names: awk '{if (NR>1) print $8, $6, $7}' all_data/example_data/sample_gwas_hg19.annot.table > all_data/example_data/sample_gwas_hg19.snp_loc.txt # print rsID, p-value but not colum names: awk '{if (NR>1) print $8, $4}' all_data/example_data/sample_gwas_hg19.annot.table > all_data/example_data/sample_gwas_hg19.p_val.txt anno_tbl <- read.table(\"all_data/example_data/sample_gwas_hg19.annot.table\", header=T) anno_tbl %>% select(marker.name, Chromosome, BP) %>% write.table(file = \"all_data/example_data/sample_gwas_hg19.snp_loc.txt\", col.names = F, row.names = F, quote = F, sep=\"\\t\") anno_tbl %>% select(marker.name, P.value) %>% write.table(file = \"all_data/example_data/sample_gwas_hg19.p_val.txt\", col.names = F, row.names = F, quote = F, sep=\"\\t\") > head all_data/example_data/sample_gwas_hg19.snp_loc.txt  ## rs58276399   1   731718 ## rs3131972    1   752721 ## rs3131971    1   752894 ## rs72631880   1   805556 ## rs1806501    1   864002 ## rs74718486   1   931500 ## rs2710868    1   938125 ## rs57683598   1   941334 ## rs15842  1   948921 ## rs9442364    1   970215"},{"path":"https://ylaboratory.github.io/seismic/articles/GWAS_processing.html","id":"step-5-run-magma-software","dir":"Articles","previous_headings":"","what":"Step 5: Run MAGMA software","title":"GWAS preprocessing for _seismic_ input","text":"two steps: gene annotation gene analysis. can use implemented bash script src/tools/magma_gene_zscore_analysis.sh seismic-analysis repository run two steps together. Another parameter specify gene analysis window size, set 35 kilobase (kb) upstream 10 kb downstream default, recommend previous study. Although shown output files various window sizes make minor difference results seismic analysis, can still change window size specifying parameter --window-size script. view specific parameters script, can run following command terminal: finally run MAGMA accompanying reference data: Besides specifying reference file paths curated files summary statistics, total size cohort also specified. Note sometimes cohort size SNP may different, example, due quality control procedure. case, separate column p-value file added input -s argument tell script order column (example, third column) describing cohort size. specifying arguments, gene-level MAGMA z-score printed output directory header similar snp location file. example output file : all_data/example_data/sample_gwas_hg19.35.10.genes.. addition, please remember check MAGMA running log. Sometimes data correct format, genes SNPs annotated (e.g., less 10% SNPs).","code":"> bash src/tools/magma_gene_zscore_analysis.sh -h  ## Usage: magma_gene_zscore_analysis.sh -l SNP_LOC_FILE -p SNP_P_VALUE_FILE -o OUTPUT_DIR -s COHORT_SIZE -m MAGMA_PATH -g GENE_LOC_FILE -b B_FILE [-w WINDOW_SIZES] [-h] ##  ## This script performs MAGMA annotation and analysis on SNP data. ##  ## Required parameters: ##     -l | SNP location file ##     -p | SNP p-value file ##     -o | Output directory ##     -s | Cohort size (use 'cX' format to specify column X containing sample size) ##     -m | Path to MAGMA binary ##     -g | Path to gene location file ##     -b | Path to g1000_eur files (without extension) ##  ## Optional parameters: ##     -w | Window sizes (default: 35,10). Use colon-separated list for multiple sizes, e.g., '35,10:15,20:40,10' ##     -h | Display this help message bash src/tools/magma_gene_zscore_analysis.sh -l all_data/example_data/sample_gwas_hg19.snp_loc.txt \\ -p all_data/example_data/sample_gwas_hg19.p_val.txt \\ -o all_data/example_data/ \\ -s 100000 -m bin/magma/magma -g ref/magma/NCBI37.3/NCBI37.3.gene.loc -b ref/magma/g1000_eur/g1000_eur"},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"scRNA-seq data preprocessing for _seismic_ input","text":"seismic framework takes SingleCellExperiment object input requiring column cell metadata specify analysis granularity. running seismic analysis, scRNAseq data preprocessed optimal usage seismic framework. illustrate process example many tips adapted single-cell best practices.","code":""},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"step-1-load-scrna-seq-data-and-accompanying-metadata","dir":"Articles","previous_headings":"","what":"Step 1: Load scRNA-seq data and accompanying metadata","title":"scRNA-seq data preprocessing for _seismic_ input","text":"simplicity, assume already scRNA-seq data metadata form SingleCellExperiment object. sample data object used can downloaded seismic zenodo data repository. assume users wanting follow tutorial downloaded unzipped all_data folder beginning.","code":"library(SingleCellExperiment) library(dplyr) library(magrittr)  example_sce <- readRDS('all_data/example_data/sample_expr.rds') # can read in your own SCE file to replace"},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"step-2-assess-data-quality","dir":"Articles","previous_headings":"","what":"Step 2: Assess data quality","title":"scRNA-seq data preprocessing for _seismic_ input","text":"check data quality looking distribution gene expression number genes expressed cell. widely used metric evaluate data quality includes: sequencing depth, number genes detected, mitochondrial gene percentage, etc. Typically mitochondrial genes named “Mt-” prefix mouse “MT-” prefix human data. data genes present. Thus, filter cells based total counts number detected genes. Additionally, dataset cell type annotations - since important part detecting associations remove cells without information.","code":"# check total counts example_sce$tot_counts <- colSums(assay(example_sce, \"counts\"))  # check total mitrochondrial counts example_sce$mito_ratio <- colSums(assay(example_sce, \"counts\")[grep(\"^Mt-\", rownames(example_sce)), ]) / example_sce$tot_counts  # check the number of genes detected example_sce$detected_genes <- colSums(assay(example_sce, \"counts\") > 0) # filter by total counts and detected genes example_sce <- example_sce[, example_sce$tot_counts > 2000 & example_sce$detected_genes > 2000]  # filter by cell ontology information example_sce <- example_sce[,!is.na(example_sce$cell_ontology_id)]  example_sce ## class: SingleCellExperiment  ## dim: 23341 7346  ## metadata(0): ## assays(2): counts logcounts ## rownames(23341): 0610005C13Rik 0610007C21Rik ... l7Rn6 ##   zsGreen-transgene ## rowData names(0): ## colnames: NULL ## colData names(42): nReads orig.ident ... mito_ratio detected_genes ## reducedDimNames(0): ## mainExpName: RNA ## altExpNames(0):"},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"optional-step-remove-genes-with-low-expression-to-alleviate-memory-and-computation-burden","dir":"Articles","previous_headings":"Step 2: Assess data quality","what":"Optional Step: Remove genes with low expression to alleviate memory and computation burden","title":"scRNA-seq data preprocessing for _seismic_ input","text":"can also remove genes low expression, since genes less likely informative downstream analysis.","code":"# number of cells expressing each gene rowData(example_sce)$num_cells <- rowSums(assay(example_sce ,\"counts\") > 0)  # number of total counts deteced for each gene rowData(example_sce)$num_counts <- rowSums(assay(example_sce ,\"counts\"))  example_sce <- example_sce[rowData(example_sce)$num_cells >= 5 & rowData(example_sce)$num_counts >= 10,]"},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"step-3-normalize-the-data","dir":"Articles","previous_headings":"","what":"Step 3: Normalize the data","title":"scRNA-seq data preprocessing for _seismic_ input","text":"recommended single-cell best practices, use scran estimate per-cell normalization factor based cell pooling.","code":"library(scran)  cell_pooling <- quickCluster(example_sce,  assay.type = \"counts\")   # factor calculation size_factor <- calculateSumFactors(example_sce, cluster = cell_pooling, min.mean = 0.1, assay.typ = \"counts\")  # normalize example_sce <- logNormCounts(example_sce, size.factors = size_factor )"},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"step-4-choose-analysis-granularity","dir":"Articles","previous_headings":"","what":"Step 4: Choose analysis granularity","title":"scRNA-seq data preprocessing for _seismic_ input","text":"seismic framework requires column cell metadata specify analysis granularity. analysis care cell types tissue-specific effects, combine together.","code":"example_sce$cell_type <- ifelse(!is.na(example_sce$free_annotation),          paste0(example_sce$tissue,\".\",example_sce$free_annotation), paste0(example_sce$tissue,\".\",example_sce$cell_ontology_class))"},{"path":"https://ylaboratory.github.io/seismic/articles/scRNA-seq_processing.html","id":"step-5-run-the-seismic-analysis","dir":"Articles","previous_headings":"","what":"Step 5: Run the seismic analysis","title":"scRNA-seq data preprocessing for _seismic_ input","text":"going data processing steps can proceed standard seismic analysis pipeline. proof concept use processed gene-level MAGMA z-scores type 2 diabetes included seismic package.","code":"library(seismicGWAS)  # calculate specificity score sscore  <- calc_specificity(sce = example_sce, ct_label_col = \"cell_type\")  # map genes from mouse to human  sscore_hsa <- translate_gene_ids(sscore, from = \"mmu_symbol\")  # calculate associations ct_association <- get_ct_trait_associations(sscore = sscore_hsa, magma = t2d_magma)  head(ct_association) ##                                                            cell_type ##                                                               <char> ## 1:                                                Pancreas.beta cell ## 2:                                        Pancreas.pancreatic A cell ## 3:                                        Pancreas.pancreatic D cell ## 4:            Large_Intestine.Lgr5- amplifying undifferentiated cell ## 5:                            Large_Intestine.Goblet cell (Proximal) ## 6: Brain_Non-Myeloid.excitatory neurons and some neuronal stem cells ##          pvalue         FDR ##           <num>       <num> ## 1: 6.330263e-06 0.000481100 ## 2: 6.691778e-05 0.002542876 ## 3: 4.749954e-04 0.012033218 ## 4: 2.103253e-02 0.306608542 ## 5: 2.292316e-02 0.306608542 ## 6: 2.420594e-02 0.306608542"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"A simple introduction to seismicGWAS","text":"First, install load seismic package. yet installed seismicGWAS, use devtools::install(path_to_seismic_folder) devtools::install_github(\"ylaboratory/seismicGWAS\").","code":"library(seismicGWAS)"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"section-1-running-seismic-on-the-included-sample-data","dir":"Articles","previous_headings":"","what":"Section 1: running seismic on the included sample data","title":"A simple introduction to seismicGWAS","text":"seismicGWAS includes preloaded small single cell RNAseq dataset form SingleCellExperiment object tmfacs_sce_small two sample MAGMA files, one Rheumatoid Arthritis (Okada et al. 2013) one Type 2 Diabetes (Xue et al. 2018)","code":"tmfacs_sce_small #> class: SingleCellExperiment  #> dim: 23341 4000  #> metadata(0): #> assays(1): logcounts #> rownames(23341): 0610005C13Rik 0610007C21Rik ... l7Rn6 #>   zsGreen-transgene #> rowData names(1): symbol #> colnames(4000): M4.MAA000844.3_10_M.1.1 A18.MAA000388.3_11_M.1.1 ... #>   M5.MAA000910.3_10_M.1.1 L2.MAA000563.3_10_M.1.1 #> colData names(17): nReads orig.ident ... sizeFactor cluster_name #> reducedDimNames(0): #> mainExpName: RNA #> altExpNames(0): head(ra_magma) #>     GENE CHR  START   STOP NSNPS NPARAM     N     ZSTAT       P #> 1 148398   1 824993 889961     1      1 58284 -0.025069 0.51000 #> 2 339451   1 860967 911099     1      1 58284 -0.025069 0.51000 #> 3  84069   1 866872 920488    12      2 58284 -0.671780 0.74914 #> 4  26155   1 869583 929679    36      4 58284 -1.717100 0.95702 #> 5  84808   1 900579 952473    80      6 58284 -1.124900 0.86968 #> 6   9636   1 913847 959920    93      7 58284 -0.991290 0.83923 head(t2d_magma) #>     GENE CHR   START    STOP NSNPS NPARAM      N    ZSTAT        P #> 1 254173   1 1074286 1143315    21      3 572082  1.75840 0.039337 #> 2   8784   1 1128888 1177163     6      1 572870  1.93210 0.026671 #> 3  55210   1 1412523 1480067     9      1 569925  0.24436 0.403470 #> 4 339453   1 1460158 1510740    37      2 571069  0.14879 0.440860 #> 5  29101   1 1467053 1545262    39      2 571016  0.15608 0.437990 #> 6   9906   1 1646277 1712438    16      2 576212 -0.48124 0.684830"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"calculating-cell-type-specificity-scores","dir":"Articles","previous_headings":"Section 1: running seismic on the included sample data","what":"Calculating cell type specificity scores","title":"A simple introduction to seismicGWAS","text":"first step seismic calculate cell type specificity scores used subsequent cell type-trait association calculations influential gene analyses. provide sample SingleCellExperiment object column data containing cell type labels cluster_name. original single cell experiment tmfacs_sce_small derived Tabula Muris. associate human GWAS traits need convert gene identifiers. convenience seismicGWAS function translating gene ids specificity score matrix. change mouse gene symbols human entrez ids match MAGMA data.","code":"tmfacs_sscore <- calc_specificity(tmfacs_sce_small, ct_label_col='cluster_name') head(tmfacs_sscore[, 1:3]) # show a truncated view of the matrix #>               Bladder.Bladder mesenchymal cell #> 0610005C13Rik                       0.00000000 #> 0610007C21Rik                       0.05171198 #> 0610007L01Rik                       0.05053099 #> 0610007N19Rik                       0.10618537 #> 0610007P08Rik                       0.04881961 #> 0610007P14Rik                       0.04976406 #>               Bladder.Luminal bladder epithelial cell #> 0610005C13Rik                            0.000000e+00 #> 0610007C21Rik                            5.416472e-02 #> 0610007L01Rik                            5.907819e-02 #> 0610007N19Rik                            4.726793e-05 #> 0610007P08Rik                            6.890189e-02 #> 0610007P14Rik                            6.196749e-02 #>               Brain_Myeloid.microglial cell #> 0610005C13Rik                  3.639054e-19 #> 0610007C21Rik                  3.768650e-02 #> 0610007L01Rik                  3.409995e-07 #> 0610007N19Rik                 4.422689e-185 #> 0610007P08Rik                  2.758088e-08 #> 0610007P14Rik                  2.225707e-17 tmfacs_sscore_hsa <- translate_gene_ids(tmfacs_sscore, from='mmu_symbol') head(tmfacs_sscore_hsa[,1:3]) # show a truncated view of the matrix #> 6 x 3 Matrix of class \"dgeMatrix\" #>        Bladder.Bladder mesenchymal cell Bladder.Luminal bladder epithelial cell #> 81932                      2.542912e-04                              0.01671191 #> 81577                      5.003187e-04                              0.01487892 #> 8614                       9.234388e-02                              0.02736780 #> 256281                     3.213228e-07                              0.08150739 #> 221687                     0.000000e+00                              0.00000000 #> 346389                     0.000000e+00                              0.17272120 #>        Brain_Myeloid.microglial cell #> 81932                   7.503793e-12 #> 81577                   3.645070e-10 #> 8614                    0.000000e+00 #> 256281                  7.970981e-07 #> 221687                  0.000000e+00 #> 346389                  0.000000e+00"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"calculating-cell-type-trait-associations","dir":"Articles","previous_headings":"Section 1: running seismic on the included sample data","what":"Calculating cell type trait associations","title":"A simple introduction to seismicGWAS","text":"can now get cell type-trait associations RA Type 2 Diabetes data plot top 20 associations per trait. Default plots show FDR corrected p-values plotted -log scale stronger associations appear top boxplot.","code":"# calculate and plot the cell type-trait associations for RA ra <- get_ct_trait_associations(tmfacs_sscore_hsa, ra_magma) plot_top_associations(ra, limit = 20) # calculate and plot the cell type-trait associations for T2D t2d <- get_ct_trait_associations(tmfacs_sscore_hsa, t2d_magma) plot_top_associations(t2d, limit = 20)"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"influential-gene-analysis","dir":"Articles","previous_headings":"Section 1: running seismic on the included sample data","what":"Influential gene analysis","title":"A simple introduction to seismicGWAS","text":"seismicGWAS can also look genes driving particular cell type-trait association, process call influential gene analysis. , need select particular cell type (example choose pancreas beta cell) trait (use Type 2 Diabetes ). important note influential gene calculations meaningful cell type-trait associations significant. chosen cell type trait found significant cell type-trait associations . Note: genes positive contributions cell type-trait association marked influential default. negative contributions may informative, directly interpretable driven genes cell types somewhat cell type specific associated given trait. Next, aid result interpretation convert Entrez gene id human-readable gene symbols using mouse genome wide annotation database (org.Hs.edg.db) AnnotationDbi. can also use gene symbols label influential points influential gene plot.","code":"# calculate influential genes ct <- \"Pancreas.beta cell\" t2d_beta_inf_genes <- find_inf_genes(ct, tmfacs_sscore_hsa, t2d_magma) head(t2d_beta_inf_genes) #>      gene specificity  zstat   dfbetas is_influential #>    <char>       <num>  <num>     <num>         <lgcl> #> 1:   3767   0.4410499 6.1866 0.1941221           TRUE #> 2: 169026   0.4932408 5.5197 0.1886886           TRUE #> 3:   2645   0.4184336 5.2990 0.1513507           TRUE #> 4:   3651   0.8982126 3.2276 0.1386102           TRUE #> 5:   6833   0.4991599 4.1322 0.1293991           TRUE #> 6:   7466   0.2439394 7.5000 0.1256267           TRUE # convert ids to symbols using org.mm.eg.db and AnnotationDbi library(org.Hs.eg.db) #make sure it has been installed hsa.map <- mapIds(org.Hs.eg.db,  keys = t2d_beta_inf_genes$gene, keytype = \"ENTREZID\",                                  column = \"SYMBOL\")  hsa.map <- stack(hsa.map) colnames(hsa.map) <- c(\"symbol\", \"entrezid\")  t2d_beta_inf_genes <- merge(t2d_beta_inf_genes, hsa.map,                              by.x='gene', by.y='entrezid') # plot influential genes plot_inf_genes(t2d_beta_inf_genes, gene_col = 'symbol', num_labels = 5)"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"section-2-running-seismicgwas-on-tabula-muris-senis","dir":"Articles","previous_headings":"","what":"Section 2: running seismicGWAS on Tabula Muris Senis","title":"A simple introduction to seismicGWAS","text":"Generally, assume users able construct appropriately normalize single cell data using seismicGWAS. tasks recommend using scran package. section illustrate run seismicGWAS package real world single cell dataset Tabula Muris. convenience use scFind package grab tissue level SingleCellExperiment objects.","code":""},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"grabbing-tabula-muris-pancreas-data-with-scfind","dir":"Articles","previous_headings":"Section 2: running seismicGWAS on Tabula Muris Senis","what":"Grabbing Tabula Muris pancreas data with scFind","title":"A simple introduction to seismicGWAS","text":"simplicity, grab one tissue type’s worth data scfind package. Explore SCE object find relevant cell type column. one exist, one exist desired specificity, create clustering, combining, using metadata adding SCE object continuing. cell_type1 field contains cell annotations can use calculating cell specificity scores. Right now NA values field. Lets remove continuing.","code":"# if scFind is not installed can install with devtools # devtools::install_github(\"hemberg-lab/scfind\") library(scfind) library(SingleCellExperiment) sce_panc <- readRDS(url(tmfacs[\"Pancreas\"])) colData(sce_panc) #> DataFrame with 1961 rows and 7 columns #>                             mouse     well             cell_type1   tissue #>                          <factor> <factor>               <factor> <factor> #> B21.MAA000574.3_8_M.1.1     3_8_M      B21              NA        Pancreas #> D12.MAA000574.3_8_M.1.1     3_8_M      D12              NA        Pancreas #> B22.MAA000574.3_8_M.1.1     3_8_M      B22              NA        Pancreas #> D13.MAA000574.3_8_M.1.1     3_8_M      D13              leukocyte Pancreas #> C1.MAA000574.3_8_M.1.1      3_8_M      C1               NA        Pancreas #> ...                           ...      ...                    ...      ... #> I9.MAA001868.3_38_F.1.1    3_38_F      I9  pancreatic acinar cell Pancreas #> K10.MAA001868.3_38_F.1.1   3_38_F      K10 NA                     Pancreas #> M19.MAA001868.3_38_F.1.1   3_38_F      M19 pancreatic acinar cell Pancreas #> O9.MAA001868.3_38_F.1.1    3_38_F      O9  NA                     Pancreas #> P16.MAA001868.3_38_F.1.1   3_38_F      P16 NA                     Pancreas #>                          subtissue     FACS      sex #>                           <factor> <factor> <factor> #> B21.MAA000574.3_8_M.1.1   Exocrine   Viable        M #> D12.MAA000574.3_8_M.1.1   Exocrine   Viable        M #> B22.MAA000574.3_8_M.1.1   Exocrine   Viable        M #> D13.MAA000574.3_8_M.1.1   Exocrine   Viable        M #> C1.MAA000574.3_8_M.1.1    Exocrine   Viable        M #> ...                            ...      ...      ... #> I9.MAA001868.3_38_F.1.1   Exocrine   Viable        F #> K10.MAA001868.3_38_F.1.1  Exocrine   Viable        F #> M19.MAA001868.3_38_F.1.1  Exocrine   Viable        F #> O9.MAA001868.3_38_F.1.1   Exocrine   Viable        F #> P16.MAA001868.3_38_F.1.1  Exocrine   Viable        F # remove cells with NA from the SCE object sce_panc_filt <- sce_panc[,!is.na(colData(sce_panc)$cell_type1)] colData(sce_panc_filt) #> DataFrame with 1327 rows and 8 columns #>                             mouse     well             cell_type1   tissue #>                          <factor> <factor>               <factor> <factor> #> D13.MAA000574.3_8_M.1.1     3_8_M      D13 leukocyte              Pancreas #> D14.MAA000574.3_8_M.1.1     3_8_M      D14 pancreatic acinar cell Pancreas #> C5.MAA000574.3_8_M.1.1      3_8_M      C5  pancreatic acinar cell Pancreas #> A3.MAA000574.3_8_M.1.1      3_8_M      A3  pancreatic PP cell     Pancreas #> C11.MAA000574.3_8_M.1.1     3_8_M      C11 pancreatic acinar cell Pancreas #> ...                           ...      ...                    ...      ... #> M16.MAA001868.3_38_F.1.1   3_38_F      M16 pancreatic acinar cell Pancreas #> M17.MAA001868.3_38_F.1.1   3_38_F      M17 pancreatic acinar cell Pancreas #> P15.MAA001868.3_38_F.1.1   3_38_F      P15 pancreatic acinar cell Pancreas #> I9.MAA001868.3_38_F.1.1    3_38_F      I9  pancreatic acinar cell Pancreas #> M19.MAA001868.3_38_F.1.1   3_38_F      M19 pancreatic acinar cell Pancreas #>                          subtissue     FACS      sex sizeFactor #>                           <factor> <factor> <factor>  <numeric> #> D13.MAA000574.3_8_M.1.1   Exocrine   Viable        M  1.9765270 #> D14.MAA000574.3_8_M.1.1   Exocrine   Viable        M  1.2732105 #> C5.MAA000574.3_8_M.1.1    Exocrine   Viable        M  0.7804386 #> A3.MAA000574.3_8_M.1.1    Exocrine   Viable        M  0.0969612 #> C11.MAA000574.3_8_M.1.1   Exocrine   Viable        M  1.4387834 #> ...                            ...      ...      ...        ... #> M16.MAA001868.3_38_F.1.1  Exocrine   Viable        F  0.1675565 #> M17.MAA001868.3_38_F.1.1  Exocrine   Viable        F  0.0712616 #> P15.MAA001868.3_38_F.1.1  Exocrine   Viable        F  0.1585532 #> I9.MAA001868.3_38_F.1.1   Exocrine   Viable        F  0.2143557 #> M19.MAA001868.3_38_F.1.1  Exocrine   Viable        F  0.2392390"},{"path":"https://ylaboratory.github.io/seismic/articles/seismicGWAS.html","id":"calculating-cell-type-trait-associations-1","dir":"Articles","previous_headings":"Section 2: running seismicGWAS on Tabula Muris Senis","what":"Calculating cell type-trait associations","title":"A simple introduction to seismicGWAS","text":"Now can calculate cell type specificity scores need downstream functions. Since using subset Tabula Muris time convert mouse gene symbols human entrez ids continuing can match identifiers human Type 2 Diabetes GWAS data. Finally, can calculate cell type-trait associations .","code":"# calculate cell specificity panc_sscore <- calc_specificity(sce_panc_filt, ct_label_col='cell_type1') head(panc_sscore[,1:4]) # show a truncated view of the matrix #>               endothelial cell    leukocyte pancreatic A cell #> 0610007C21Rik     1.925564e-02 8.198702e-08      1.996716e-01 #> 0610007L01Rik     2.031098e-03 8.280322e-06      1.576197e-01 #> 0610007N19Rik     4.378839e-13 0.000000e+00      5.664380e-19 #> 0610007P08Rik     3.511300e-13 2.826381e-05      1.804820e-01 #> 0610007P14Rik     1.026578e-03 6.615702e-06      1.918313e-01 #> 0610007P22Rik     1.052606e-04 8.502420e-03      1.250415e-01 #>               pancreatic acinar cell #> 0610007C21Rik          8.149700e-216 #> 0610007L01Rik           3.567238e-43 #> 0610007N19Rik           6.355130e-02 #> 0610007P08Rik           3.894345e-12 #> 0610007P14Rik          5.294229e-107 #> 0610007P22Rik           7.515759e-21 panc_sscore_hsa <- translate_gene_ids(panc_sscore, from='mmu_symbol') head(panc_sscore_hsa[,1:4]) # show a truncated view of the matrix #> 6 x 4 Matrix of class \"dgeMatrix\" #>        endothelial cell    leukocyte pancreatic A cell pancreatic acinar cell #> 81932       0.004922072 0.000000e+00      2.088431e-01           6.213640e-04 #> 81577       0.119625749 1.955628e-16      1.127160e-01           3.838398e-31 #> 8614        0.000000000 0.000000e+00      2.420464e-05           1.766824e-01 #> 256281      0.004280693 9.500268e-03      1.938377e-01           8.279519e-95 #> 221687      0.000000000 0.000000e+00      1.659393e-37           0.000000e+00 #> 346389      0.000000000 0.000000e+00      1.067150e-07           1.468089e-05 panc_t2d <- get_ct_trait_associations(panc_sscore_hsa, t2d_magma) plot_top_associations(panc_t2d, limit = 20)"},{"path":"https://ylaboratory.github.io/seismic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Qiliang Lai. Author, maintainer. Ruth Dannenfelser. Author. Vicky Yao. Author.","code":""},{"path":"https://ylaboratory.github.io/seismic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lai Q, Dannenfelser R, Yao V (2025). seismicGWAS: Single-cell Expression Integration System Mapping genetically Implicated Cell types. R package version 1.0.0, https://github.com/ylaboratory/seismic.","code":"@Manual{,   title = {seismicGWAS: Single-cell Expression Integration System for Mapping genetically Implicated Cell types},   author = {Qiliang Lai and Ruth Dannenfelser and Vicky Yao},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/ylaboratory/seismic}, }"},{"path":"https://ylaboratory.github.io/seismic/index.html","id":"seismic-single-cell-expression-integration-system-for-mapping-genetically-implicated-cell-types","dir":"","previous_headings":"","what":"Single-cell Expression Integration System for Mapping genetically Implicated Cell types","title":"Single-cell Expression Integration System for Mapping genetically Implicated Cell types","text":"repository contains code R package seismicGWAS, implementation seismic computational framework mapping genetically implicated cell types driver genes complex traits diseases, integrating GWAS summary statistics single cell expression data.","code":""},{"path":"https://ylaboratory.github.io/seismic/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Single-cell Expression Integration System for Mapping genetically Implicated Cell types","text":"use seismicGWAS ask cite paper: Disentangling associations complex traits cell types seismic. Lai Q, Dannenfelser R, Roussarie JP, Yao V. BioRxiv. April 2024.","code":""},{"path":"https://ylaboratory.github.io/seismic/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Single-cell Expression Integration System for Mapping genetically Implicated Cell types","text":"Integrating single-cell RNA sequencing (scRNA-seq) Genome-Wide Association Studies (GWAS) can help reveal GWAS-associated cell types furthering understanding cell-type-specific biological processes underlying complex traits disease. order rapidly accurately pinpoint associations, develop novel framework, seismic, characterizes cell types using new specificity score. part seismic framework, specific genes driving cell type-trait associations can easily accessed analyzed, enabling biological insights. following figure depicts high level overview process. Overview seismic. seismic allows flexible set cell type labels granularities, ranging broader cell classes specifically defined cell types, calculating novel gene specificity score corresponding cell characterizations, capturing magnitude consistency gene expression. cell-type-level gene specificity scores integrated MAGMA z-scores using regression model assess statistical significance cell type-trait associations, assumption disease-critical genes specific implicated cell type.","code":""},{"path":"https://ylaboratory.github.io/seismic/index.html","id":"installation-and-dependencies","dir":"","previous_headings":"","what":"Installation and dependencies","title":"Single-cell Expression Integration System for Mapping genetically Implicated Cell types","text":"install seismicGWAS R package first clone seismic repo use devtools within R point seismic install. R environment version 4.0.0 higher. First download repository local machine, directly install R: alternatively, can install package directly GitHub using following command: package requires several dependencies listed DESCRIPTION file, installed automatically.","code":"devtools::install(path_to_seismic_folder) library('seismicGWAS') devtools::install_github(\"ylaboratory/seismicGWAS\") library('seismicGWAS')"},{"path":"https://ylaboratory.github.io/seismic/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Single-cell Expression Integration System for Mapping genetically Implicated Cell types","text":"quickly show use seismicGWAS calcuate cell type-trait associations sample data included package. full usage details, including walk major functions extra upstream data preprocessing instructions, please check extensive tutorial: Introduction walk GWAS preprocessing scRNA-seq preprocessing","code":"# calculate cell type specificity scores using included sample data # estimated running time: less than 1 minute tmfacs_sscore <- calc_specificity(tmfacs_sce_small, ct_label_col='cluster_name')  # convert mouse gene identifiers to human ones that match data in GWAS summary data # from MAGMA # estimated running time: 3 seconds tmfacs_sscore_hsa <- translate_gene_ids(tmfacs_sscore, from='mmu_symbol')  # calculate cell type-trait associations for type 2 diabetes # estimated running time: less than 1 minutes get_ct_trait_associations(tmfacs_sscore_hsa, t2d_magma)  # find the influential genes for a significant cell type-trait association # in type 2 diabetes # estimated running time: 10 seconds find_inf_genes(\"Pancreas.beta cell\", tmfacs_sscore_hsa, t2d_magma)"},{"path":"https://ylaboratory.github.io/seismic/reference/calc_specificity.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute seismic specificity score for each gene and cell type. — calc_specificity","title":"Compute seismic specificity score for each gene and cell type. — calc_specificity","text":"Compute seismic specificity score gene cell type.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/calc_specificity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute seismic specificity score for each gene and cell type. — calc_specificity","text":"","code":"calc_specificity(   sce,   assay_name = \"logcounts\",   ct_label_col = \"idents\",   min_uniq_ct = 2,   min_ct_size = 20,   min_cells_gene_exp = 10,   min_avg_exp_ct = 0.1 )"},{"path":"https://ylaboratory.github.io/seismic/reference/calc_specificity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute seismic specificity score for each gene and cell type. — calc_specificity","text":"sce SingleCellExperiment object. object needs include assay_name specified ct_label_col column corresponding cell type labels granularity interest. Row names used gene name identifiers. assay_name assay sce, default 'logcounts' (calculated using scran). ct_label_col column name colData sce (information cells sce) provides labels cell, indicating membership cell type granularity interest. min_uniq_ct minimum number unique cell types needed data proceed specificity score calculations. Default: 2. min_ct_size Filter cell types included specificity score calculation based number cells labeled cell type. Default: 20. min_cells_gene_exp Filter genes included specificity score calculation based number cells gene non-zero expression. Default: 10. min_avg_exp_ct Filter genes included specificity score calculation based mean cell-type-averaged expressions (aka mean mean cell type expression). Default: 0.1","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/calc_specificity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute seismic specificity score for each gene and cell type. — calc_specificity","text":"dgeMatrix specificity scores (genes rows, cell types columns).","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/check_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for overlapping genes between specificity scores and trait gene summaries from MAGMA. — check_overlap","title":"Check for overlapping genes between specificity scores and trait gene summaries from MAGMA. — check_overlap","text":"Check overlapping genes specificity scores trait gene summaries MAGMA.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/check_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for overlapping genes between specificity scores and trait gene summaries from MAGMA. — check_overlap","text":"","code":"check_overlap(   sscore,   magma,   magma_gene_col,   warn_thresh = 0.8,   min_intersect = 1 )"},{"path":"https://ylaboratory.github.io/seismic/reference/check_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for overlapping genes between specificity scores and trait gene summaries from MAGMA. — check_overlap","text":"sscore dgeMatrix seismic specificity scores column cell type row names gene identifiers. (Note: identifiers used match used MAGMA input) magma data.frame file path MAGMA output particular GWAS least 2 columns: gene identifiers z-scores. magma_gene_col character string corresponding column name MAGMA data containing gene identifiers. Defaults 'GENE' MAGMA output. warn_thresh floating point number corresponding minimum percentage overlapping genes warning error displayed. Defaults 80% overlap. min_intersect floating point number representing minimum number overlapping genes needed execution. Defaults 1.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/find_inf_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate influential genes for a given trait and cell type using DFBETAS. — find_inf_genes","title":"Calculate influential genes for a given trait and cell type using DFBETAS. — find_inf_genes","text":"Calculate influential genes given trait cell type using DFBETAS.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/find_inf_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate influential genes for a given trait and cell type using DFBETAS. — find_inf_genes","text":"","code":"find_inf_genes(   ct,   sscore,   magma,   magma_gene_col = \"GENE\",   magma_z_col = \"ZSTAT\" )"},{"path":"https://ylaboratory.github.io/seismic/reference/find_inf_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate influential genes for a given trait and cell type using DFBETAS. — find_inf_genes","text":"ct character string containing valid cell type name sscore. sscore dgeMatrix seismic specificity scores column cell type row names gene identifiers. (Note: identifiers used match used MAGMA input) magma data.frame file path MAGMA output particular GWAS least 2 columns: gene identifiers z-scores. magma_gene_col character string corresponding column name MAGMA data containing gene identifiers. Defaults 'GENE' MAGMA output. magma_z_col character string corresponding column name MAGMA data containing z-scores. Defaults 'ZSTAT' MAGMA output.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/find_inf_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate influential genes for a given trait and cell type using DFBETAS. — find_inf_genes","text":"data.frame containing genes, seismic specificity scores, magma z-stats, dfbetas influential gene score, Boolean value indicating gene influential.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/get_ct_trait_associations.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cell type-trait associations — get_ct_trait_associations","title":"Calculate cell type-trait associations — get_ct_trait_associations","text":"Calculate cell type-trait associations","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/get_ct_trait_associations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cell type-trait associations — get_ct_trait_associations","text":"","code":"get_ct_trait_associations(   sscore,   magma,   magma_gene_col = \"GENE\",   magma_z_col = \"ZSTAT\" )"},{"path":"https://ylaboratory.github.io/seismic/reference/get_ct_trait_associations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cell type-trait associations — get_ct_trait_associations","text":"sscore dgeMatrix seismic specificity scores column cell type row names gene identifiers. (Note: identifiers used match used MAGMA input) magma data.frame file path MAGMA output particular GWAS least 2 columns: gene identifiers z-scores. magma_gene_col character string corresponding column name MAGMA data containing gene identifiers. Defaults 'GENE' MAGMA output. magma_z_col character string corresponding column name MAGMA data containing z-scores. Defaults 'ZSTAT' MAGMA output.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/get_ct_trait_associations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cell type-trait associations — get_ct_trait_associations","text":"data.frame trait associations cell type.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/load_magma_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Check magma object / file is usable and returns it as a data.table — load_magma_dt","title":"Check magma object / file is usable and returns it as a data.table — load_magma_dt","text":"Check magma object / file usable returns data.table","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/load_magma_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check magma object / file is usable and returns it as a data.table — load_magma_dt","text":"","code":"load_magma_dt(magma, magma_gene_col, magma_z_col)"},{"path":"https://ylaboratory.github.io/seismic/reference/load_magma_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check magma object / file is usable and returns it as a data.table — load_magma_dt","text":"magma input magma object / file magma_gene_col character string corresponding column name MAGMA data containing gene identifiers magma_z_col character string corresponding column name MAGMA data containing z-scores","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/load_magma_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check magma object / file is usable and returns it as a data.table — load_magma_dt","text":"magma file contents data.table","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/plot_inf_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot influential genes for a given trait and cell type after running find_inf_genes(). — plot_inf_genes","title":"Plot influential genes for a given trait and cell type after running find_inf_genes(). — plot_inf_genes","text":"Plot influential genes given trait cell type running find_inf_genes().","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/plot_inf_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot influential genes for a given trait and cell type after running find_inf_genes(). — plot_inf_genes","text":"","code":"plot_inf_genes(   inf_df,   num_labels = 10,   consider_neg_zstat = F,   repel = T,   gene_col = \"gene\",   spec_col = \"specificity\",   trait_col = \"zstat\",   df_betas_col = \"dfbetas\",   indicator_col = \"is_influential\" )"},{"path":"https://ylaboratory.github.io/seismic/reference/plot_inf_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot influential genes for a given trait and cell type after running find_inf_genes(). — plot_inf_genes","text":"inf_df data.frame data.table influential gene scores output seismic. Must contain columns correspond genes, seismic specificity scores, MAGMA trait z-scores, dfbeta values, Boolean column indicating influential genes. num_labels Number top influential genes label (can also specify \"\") name provided 'gene_col'. given specific numbers, top influential genes (dfbetas) labeled. genes is_influential==T labeled. consider_neg_zstat Boolean value indicating whether genes negative z-scores considered (aka coloring gene labels). Defaults FALSE. repel Boolean value indicating whether use ggrepel package clearer labeling. Defaults TRUE. gene_col character string containing name gene identifier column. Defaults 'gene' column output find_inf_genes(). spec_col character string containing name specificity column. Defaults 'specificity' column output find_inf_genes(). trait_col character string containing name MAGMA z-score column. Defaults 'zstat' column output find_inf_genes(). df_betas_col character string containing name dfbetas column. Defaults 'dfbetas' column output find_inf_genes(). indicator_col character string containing name influential gene indicator column. Defaults 'is_influential' column output find_inf_genes().","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/plot_inf_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot influential genes for a given trait and cell type after running find_inf_genes(). — plot_inf_genes","text":"ggplot object geom_point.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/plot_top_associations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the top cell type associations for a given trait. — plot_top_associations","title":"Plot the top cell type associations for a given trait. — plot_top_associations","text":"Plot top cell type associations given trait.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/plot_top_associations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the top cell type associations for a given trait. — plot_top_associations","text":"","code":"plot_top_associations(trait_res, fdr = T, limit = 10)"},{"path":"https://ylaboratory.github.io/seismic/reference/plot_top_associations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the top cell type associations for a given trait. — plot_top_associations","text":"trait_res data.frame data.table object cell type associations detected seismic. expected data object contains minimum three columns: cell_type, p_value, FDR. fdr Boolean value determining FDR plotted. false p-values used plot. Defaults printing FDR. limit positive integer limiting number top cell types shown. Default 10 cell types.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/plot_top_associations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the top cell type associations for a given trait. — plot_top_associations","text":"ggplot bar plot object.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/ra_magma.html","id":null,"dir":"Reference","previous_headings":"","what":"MAGMA genes.out output for rheumatoid arthritis — ra_magma","title":"MAGMA genes.out output for rheumatoid arthritis — ra_magma","text":"data.frame genes.output MAGMA calculated using rheumatoid arthritis summary statistics.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/ra_magma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MAGMA genes.out output for rheumatoid arthritis — ra_magma","text":"","code":"ra_magma"},{"path":[]},{"path":"https://ylaboratory.github.io/seismic/reference/ra_magma.html","id":"ra-magma","dir":"Reference","previous_headings":"","what":"ra_magma","title":"MAGMA genes.out output for rheumatoid arthritis — ra_magma","text":"data.frame 17,460 rows 9 columns: GENE entrez gene ID CHR chromosome gene START start boundary gene chromosome (including provided window annotation) END end boundary gene chromosome (including provided window annotation) NSNPS number SNPS annotated gene (excluded based internal SNP QC) NPARAM number relevant parameters used MAGMA model N sample size used analyzing gene ZSTAT z-value gene based permuted p-value (also term MAGMA z-score) P gene p-value","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/ra_magma.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MAGMA genes.out output for rheumatoid arthritis — ra_magma","text":"https://www.nature.com/articles/nature12873","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/seismicGWAS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"seismicGWAS: Single-cell Expression Investigation for Study of Molecular Interactions and Connections — seismicGWAS-package","title":"seismicGWAS: Single-cell Expression Investigation for Study of Molecular Interactions and Connections — seismicGWAS-package","text":"Discover cell type-disease associations using single-cell RNA-seq GWAS summary statistics.","code":""},{"path":[]},{"path":"https://ylaboratory.github.io/seismic/reference/seismicGWAS-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"seismicGWAS: Single-cell Expression Investigation for Study of Molecular Interactions and Connections — seismicGWAS-package","text":"Maintainer: Qiliang Lai ql29@rice.edu Authors: Ruth Dannenfelser rtdn@rice.edu (ORCID) Vicky Yao vy@rice.edu (ORCID)","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/sweep_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Similar to the base sweep function, but can be used for sparse matrices as well. — sweep_sparse","title":"Similar to the base sweep function, but can be used for sparse matrices as well. — sweep_sparse","text":"Enables fast computations across columns rows (margin=1 2 respectively) matrix, dgeMatrix, dgTMatrix, dgCMatrix, dgRMatrix types supported. adapted https://stackoverflow.com/questions/55407656/r-sweep---sparse-matrix","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/sweep_sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similar to the base sweep function, but can be used for sparse matrices as well. — sweep_sparse","text":"","code":"sweep_sparse(x, margin, stats, fun = \"*\")"},{"path":"https://ylaboratory.github.io/seismic/reference/sweep_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similar to the base sweep function, but can be used for sparse matrices as well. — sweep_sparse","text":"x matrix (matrix, dgeMatrix, dgTMatrix, dgCMatrix, dgRMatrix). margin Across columns rows (margin=1 2 respectively) stats column name metadata grouping fun function applied item stats x (along margin)","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/sweep_sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similar to the base sweep function, but can be used for sparse matrices as well. — sweep_sparse","text":"matrix","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/t2d_magma.html","id":null,"dir":"Reference","previous_headings":"","what":"MAGMA genes.out output for type 2 diabetes — t2d_magma","title":"MAGMA genes.out output for type 2 diabetes — t2d_magma","text":"data.frame genes.output MAGMA calculated using type 2 diabetes summary statistics.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/t2d_magma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MAGMA genes.out output for type 2 diabetes — t2d_magma","text":"","code":"t2d_magma"},{"path":[]},{"path":"https://ylaboratory.github.io/seismic/reference/t2d_magma.html","id":"t-d-magma","dir":"Reference","previous_headings":"","what":"t2d_magma","title":"MAGMA genes.out output for type 2 diabetes — t2d_magma","text":"data.frame 17,460 rows 9 columns: GENE entrez gene ID CHR chromosome gene START start boundary gene chromosome (including provided window annotation) END end boundary gene chromosome (including provided window annotation) NSNPS number SNPS annotated gene (excluded based internal SNP QC) NPARAM number relevant parameters used MAGMA model N sample size used analyzing gene ZSTAT z-value gene based permuted p-value (also term MAGMA z-score) P gene p-value","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/t2d_magma.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MAGMA genes.out output for type 2 diabetes — t2d_magma","text":"https://www.nature.com/articles/s41467-018-04951-w","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/tmfacs_sce_small.html","id":null,"dir":"Reference","previous_headings":"","what":"Small Subset of Tabula Muris FACS scRNA-seq data — tmfacs_sce_small","title":"Small Subset of Tabula Muris FACS scRNA-seq data — tmfacs_sce_small","text":"subset 4000 cells Tabula Muris FACS scRNA-seq data already normalized using scran package, providing log-normalized counts. Cluster labels labeled cluster_name column.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/tmfacs_sce_small.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small Subset of Tabula Muris FACS scRNA-seq data — tmfacs_sce_small","text":"","code":"tmfacs_sce_small"},{"path":[]},{"path":"https://ylaboratory.github.io/seismic/reference/tmfacs_sce_small.html","id":"tmfacs-sce-small","dir":"Reference","previous_headings":"","what":"tmfacs_sce_small","title":"Small Subset of Tabula Muris FACS scRNA-seq data — tmfacs_sce_small","text":"SingleCellExperiment 23,341 rows (mouse gene symbols) 4000 columns (cells), relevant items: assays$logcounts log normalized counts calculated scran cluster_name tissue cell type (separated .)","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/tmfacs_sce_small.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Small Subset of Tabula Muris FACS scRNA-seq data — tmfacs_sce_small","text":"https://tabula-muris.ds.czbiohub.org","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/translate_gene_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate gene ids of a given dgeMatrix of seismic specificity scores from a given organism (e.g., mouse) to another (e.g., human) based on orthology. — translate_gene_ids","title":"Translate gene ids of a given dgeMatrix of seismic specificity scores from a given organism (e.g., mouse) to another (e.g., human) based on orthology. — translate_gene_ids","text":"Currently supported organisms: hsa, mmu (human, mouse, respectively) Currently supported IDs: symbol, ensembl, entrez","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/translate_gene_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate gene ids of a given dgeMatrix of seismic specificity scores from a given organism (e.g., mouse) to another (e.g., human) based on orthology. — translate_gene_ids","text":"","code":"translate_gene_ids(   sscore,   from = \"mmu_ensembl\",   to = \"hsa_entrez\",   multi_mapping = \"mean\" )"},{"path":"https://ylaboratory.github.io/seismic/reference/translate_gene_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate gene ids of a given dgeMatrix of seismic specificity scores from a given organism (e.g., mouse) to another (e.g., human) based on orthology. — translate_gene_ids","text":"sscore dgeMatrix specificity scores (direct output calc_specificity()) organism ID type current identifiers, separated underscore (default: mmu_ensembl). organism ID type target identifiers, separated underscore (default: hsa_entrez). multi_mapping Method translate metrics one source ID several target ID matches. Options: mean (default), sum.","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/translate_gene_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate gene ids of a given dgeMatrix of seismic specificity scores from a given organism (e.g., mouse) to another (e.g., human) based on orthology. — translate_gene_ids","text":"dgeMatrix row names using target identifiers, ","code":""},{"path":"https://ylaboratory.github.io/seismic/reference/translate_gene_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate gene ids of a given dgeMatrix of seismic specificity scores from a given organism (e.g., mouse) to another (e.g., human) based on orthology. — translate_gene_ids","text":"Unmatched rows dropped matrix.","code":""}]
